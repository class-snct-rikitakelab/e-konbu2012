●力武先生のチェック及び質問(8/20)
・戦略部は何が起きたことを知っているのか？
	階段にぶつかった事など
・矢印の向きの意味は？戦略部が検出部のメソッドを用いているのなら、向きは逆なのでは？
・矢印は○○が△△を知っている（○○→△△）
・指令部が戦略部に問い合わせる
・戦略の切り替えは検出部に問い合わせる
・パッケージ図は特に問題無い

クラス図
・走行（仮）がはみ出ているのは？別に指令部でもいいのでは？
・走行開始はいるけど、別に指令部でよく、タスクマスターはいらない
・無線受信機が気持ち悪い
・外部状態監視は無線受信機も見てればいいのでは？
・走行開始とプログラム開始は違う

シーケンス図
・無線受信機がルートのオブジェクトになっているのは良くない
・駆動指示は何をするのか？値を受け取って駆動部に渡すものだとすると、受け取るメソッドが無い？
・尻尾は駆動部
・駆動部で何を制御するのかがわからない。走っている様子がイメージ出来ない
・速度、旋回量、尻尾の制御器も必要
・駆動部は大きくなるので、制御器の部分だけを見えるようにして描写すると見やすくなる
・駆動指示機はまず何を呼び出すのか？
	まず推定させてパラメータを更新する
・推定するのは駆動指示機が呼び出すもの？
・現在区間を推定するものが呼び出されるのはいつなのか？

クラス図2
・推定と駆動指示の関係性がわかりにくい
・結局目標値はどこで取ってくるのか？
	実際は曲率PIDの方に繋がってくる
・結局何が渡されるの？
	こっちでもグレーゾーン
・制御器に渡すパラメータが渡されることになるのでは？
・駆動指示は周期的なタスクとして呼ばれる？
・その一連の流れは全部4ms？その必要性はあるのか？
・区間推定はもうちょっと緩いタスクでも問題無いのでは
・区間推定は別のタスクとしても出来る。むしろそっちの方が良い？
・何かあったときに通知するというのでもいいのでは？
・現状の形はわかりやすいが、どれがアクティブな（タスクになるような）クラスなのかが分かりづらい
・検出部は切り替えのトリガーだけを検出する。ならば駆動指示が外部状態監視とつながる方が良いのでは？
	それではどのトリガーが必要なのかがわからないのでは？
・今のところ、ベーシックコース。ベーシックコースで使うのは、輝度値と曲率の制御。それを使って実際に
ライントレースをするのかどうかをチェックしたい。
・PID制御はモデルカタログがあるが、それに渡すためのデータ（パラメータ）をどこで算出してどう渡すのかの
メカニズムを明確に。
・ベーシックコースの区間の切り替えもトリガー。トリガーはトリガー。それがどういう物を基準にしたトリガー
なのかが違うだけで、受け取る側は一緒。
・区間推定なのに区間が無いのでは？
	インコース、アウトコース区間クラスのインスタンス化で行う。
・位置情報は区間を知るだけのために使っているのか？
	曲率PIDをするために曲率半径を求めるなど、走行体の走行情報（速度、方向）などを計算出来るのが位置情報になる
・計算があるなら、それを分けてもいいのでは？（現在位置の検出→検出部でいいのでは）
・外の情報と中の情報（走行体の）を分けなくてもいいのでは？
・曲率半径の取得は駆動部の方にあって、現在の曲率半径と目標曲率半径を比較する構造が必要
・大本になる制御器がいくつかの制御器を呼んでそのデータを足し合わせる構造が必要
・モデルシートには駆動部は制御器だけ書いておけば良い

まとめ
・何がどういうタイミングで来るのかがわかりにくい
・どの部分が自律しているのかを明確に
・足りない制御器を示すこと
・データの流れが重要
・ユースケース記述を書いた方が良い
	ユースケース図は書きにくい
	「システムは○○する」で書き始める？
・周期になっているタスクでクラスを分けるのが大事
・ユースケース記述で書いた内容が実現出来ているのかをシーケンス図で確認するような流れを
・要求図でそのあたりを書いた方が良いかもしれない。
・各区間毎に要求があるのであればそれをもう少し明示的に示していくという流れを
・やはりユースケース図が必要なのではないか（簡単なやつでいい）
・駆動部をもう少し洗い出した方が良いのではないだろうか。
・各区間で何をすべきか
・区間の切り替えをどうするべきか
・コンポーネントになった気持ちで
